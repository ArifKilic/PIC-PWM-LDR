

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Jan 03 17:15:31 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001D                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  0081                     	;# 
    53  0085                     	;# 
    54  0086                     	;# 
    55  0087                     	;# 
    56  0088                     	;# 
    57  0089                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  008E                     	;# 
    61  0091                     	;# 
    62  0092                     	;# 
    63  0093                     	;# 
    64  0094                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  009F                     	;# 
    71  010C                     	;# 
    72  010D                     	;# 
    73  010E                     	;# 
    74  010F                     	;# 
    75  018C                     	;# 
    76  018D                     	;# 
    77  001F                     _ADCON0	set	31
    78  001F                     _ADCON0bits	set	31
    79  001E                     _ADRESH	set	30
    80  0015                     _CCPR1L	set	21
    81  00BA                     _CCP1M2	set	186
    82  00BB                     _CCP1M3	set	187
    83  00BD                     _CCP1X	set	189
    84  00BC                     _CCP1Y	set	188
    85  0090                     _T2CKPS0	set	144
    86  0091                     _T2CKPS1	set	145
    87  0092                     _TMR2ON	set	146
    88  009F                     _ADCON1	set	159
    89  009E                     _ADRESL	set	158
    90  0092                     _PR2	set	146
    91  0085                     _TRISA	set	133
    92  043A                     _TRISC2	set	1082
    93                           
    94                           ; #config settings
    95  0000                     
    96                           	psect	cinit
    97  07FC                     start_initialization:	
    98  07FC                     __initialization:	
    99  07FC                     end_of_initialization:	
   100                           ;End of C runtime variable initialization code
   101                           
   102  07FC                     __end_of__initialization:	
   103  07FC  0183               	clrf	3
   104  07FD  120A  118A  2DCD   	ljmp	_main	;jump to C main() function
   105                           
   106                           	psect	cstackCOMMON
   107  0070                     __pcstackCOMMON:	
   108  0070                     ?_duty_gir:	
   109  0070                     ??_PWM1_TMR2_giris:	
   110                           ; 1 bytes @ 0x0
   111                           
   112  0070                     ?_ADC_Deger:	
   113                           ; 1 bytes @ 0x0
   114                           
   115  0070                     ??_ADC_Deger:	
   116                           ; 1 bytes @ 0x0
   117                           
   118  0070                     ?_main:	
   119                           ; 1 bytes @ 0x0
   120                           
   121  0070                     ?_PWM1_TMR2_giris:	
   122                           ; 1 bytes @ 0x0
   123                           
   124  0070                     ?___ftpack:	
   125                           ; 2 bytes @ 0x0
   126                           
   127  0070                     duty_gir@deger1:	
   128                           ; 3 bytes @ 0x0
   129                           
   130  0070                     ___ftpack@arg:	
   131                           ; 2 bytes @ 0x0
   132                           
   133                           
   134                           ; 3 bytes @ 0x0
   135  0070                     	ds	2
   136  0072                     ??_duty_gir:	
   137                           
   138                           ; 1 bytes @ 0x2
   139  0072                     	ds	1
   140  0073                     ___ftpack@exp:	
   141                           
   142                           ; 1 bytes @ 0x3
   143  0073                     	ds	1
   144  0074                     ___ftpack@sign:	
   145                           
   146                           ; 1 bytes @ 0x4
   147  0074                     	ds	1
   148  0075                     ??___ftpack:	
   149                           
   150                           ; 1 bytes @ 0x5
   151  0075                     	ds	3
   152  0078                     ?___lwtoft:	
   153  0078                     ___lwtoft@c:	
   154                           ; 3 bytes @ 0x8
   155                           
   156                           
   157                           ; 2 bytes @ 0x8
   158  0078                     	ds	3
   159  007B                     ??___lwtoft:	
   160                           
   161                           ; 1 bytes @ 0xB
   162  007B                     	ds	1
   163  007C                     ??_main:	
   164                           
   165                           	psect	cstackBANK0
   166  0020                     __pcstackBANK0:	
   167                           ; 1 bytes @ 0xC
   168                           
   169  0020                     ?___ftmul:	
   170  0020                     ___ftmul@f1:	
   171                           ; 3 bytes @ 0x0
   172                           
   173                           
   174                           ; 3 bytes @ 0x0
   175  0020                     	ds	3
   176  0023                     ___ftmul@f2:	
   177                           
   178                           ; 3 bytes @ 0x3
   179  0023                     	ds	3
   180  0026                     ??___ftmul:	
   181                           
   182                           ; 1 bytes @ 0x6
   183  0026                     	ds	4
   184  002A                     ___ftmul@exp:	
   185                           
   186                           ; 1 bytes @ 0xA
   187  002A                     	ds	1
   188  002B                     ___ftmul@f3_as_product:	
   189                           
   190                           ; 3 bytes @ 0xB
   191  002B                     	ds	3
   192  002E                     ___ftmul@cntr:	
   193                           
   194                           ; 1 bytes @ 0xE
   195  002E                     	ds	1
   196  002F                     ___ftmul@sign:	
   197                           
   198                           ; 1 bytes @ 0xF
   199  002F                     	ds	1
   200  0030                     ?___ftdiv:	
   201  0030                     ___ftdiv@f2:	
   202                           ; 3 bytes @ 0x10
   203                           
   204                           
   205                           ; 3 bytes @ 0x10
   206  0030                     	ds	3
   207  0033                     ___ftdiv@f1:	
   208                           
   209                           ; 3 bytes @ 0x13
   210  0033                     	ds	3
   211  0036                     ??___ftdiv:	
   212                           
   213                           ; 1 bytes @ 0x16
   214  0036                     	ds	4
   215  003A                     ___ftdiv@cntr:	
   216                           
   217                           ; 1 bytes @ 0x1A
   218  003A                     	ds	1
   219  003B                     ___ftdiv@f3:	
   220                           
   221                           ; 3 bytes @ 0x1B
   222  003B                     	ds	3
   223  003E                     ___ftdiv@exp:	
   224                           
   225                           ; 1 bytes @ 0x1E
   226  003E                     	ds	1
   227  003F                     ___ftdiv@sign:	
   228                           
   229                           ; 1 bytes @ 0x1F
   230  003F                     	ds	1
   231  0040                     ?___fttol:	
   232  0040                     ___fttol@f1:	
   233                           ; 4 bytes @ 0x20
   234                           
   235                           
   236                           ; 3 bytes @ 0x20
   237  0040                     	ds	4
   238  0044                     ??___fttol:	
   239                           
   240                           ; 1 bytes @ 0x24
   241  0044                     	ds	4
   242  0048                     ___fttol@sign1:	
   243                           
   244                           ; 1 bytes @ 0x28
   245  0048                     	ds	1
   246  0049                     ___fttol@lval:	
   247                           
   248                           ; 4 bytes @ 0x29
   249  0049                     	ds	4
   250  004D                     ___fttol@exp1:	
   251                           
   252                           ; 1 bytes @ 0x2D
   253  004D                     	ds	1
   254  004E                     main@volt_degeri:	
   255                           
   256                           ; 3 bytes @ 0x2E
   257  004E                     	ds	3
   258  0051                     main@adc_deger:	
   259                           
   260                           ; 2 bytes @ 0x31
   261  0051                     	ds	2
   262  0053                     main@deger:	
   263                           
   264                           ; 2 bytes @ 0x33
   265  0053                     	ds	2
   266                           
   267                           	psect	maintext
   268  05CD                     __pmaintext:	
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 42 in file "LDR_son.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;  volt_degeri     3   46[BANK0 ] 
   279 ;;  deger           2   51[BANK0 ] unsigned int 
   280 ;;  adc_deger       2   49[BANK0 ] unsigned int 
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0, pclath, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : B00/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   290 ;;      Params:         0       0       0       0       0
   291 ;;      Locals:         0       7       0       0       0
   292 ;;      Temps:          0       0       0       0       0
   293 ;;      Totals:         0       7       0       0       0
   294 ;;Total ram usage:        7 bytes
   295 ;; Hardware stack levels required when called:    2
   296 ;; This function calls:
   297 ;;		_ADC_Deger
   298 ;;		_PWM1_TMR2_giris
   299 ;;		___ftdiv
   300 ;;		___ftmul
   301 ;;		___fttol
   302 ;;		___lwtoft
   303 ;;		_duty_gir
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           
   310                           ;psect for function _main
   311  05CD                     _main:	
   312                           
   313                           ;LDR_son.c: 43: unsigned int adc_deger,deger=0;
   314                           
   315                           ;incstack = 0
   316                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   317  05CD  1283               	bcf	3,5	;RP0=0, select bank0
   318  05CE  1303               	bcf	3,6	;RP1=0, select bank0
   319  05CF  01D3               	clrf	main@deger
   320  05D0  01D4               	clrf	main@deger+1
   321                           
   322                           ;LDR_son.c: 44: double volt_degeri;
   323                           ;LDR_son.c: 45: PR2=249;
   324  05D1  30F9               	movlw	249
   325  05D2  1683               	bsf	3,5	;RP0=1, select bank1
   326  05D3  1303               	bcf	3,6	;RP1=0, select bank1
   327  05D4  0092               	movwf	18	;volatile
   328                           
   329                           ;LDR_son.c: 54: duty_gir(0);
   330  05D5  3000               	movlw	0
   331  05D6  00F0               	movwf	duty_gir@deger1
   332  05D7  00F1               	movwf	duty_gir@deger1+1
   333  05D8  120A  118A  24BA  120A  118A  	fcall	_duty_gir
   334                           
   335                           ;LDR_son.c: 55: PWM1_TMR2_giris();
   336  05DD  120A  118A  249B  120A  118A  	fcall	_PWM1_TMR2_giris
   337                           
   338                           ;LDR_son.c: 57: TRISA = 0xFF;
   339  05E2  30FF               	movlw	255
   340  05E3  1683               	bsf	3,5	;RP0=1, select bank1
   341  05E4  1303               	bcf	3,6	;RP1=0, select bank1
   342  05E5  0085               	movwf	5	;volatile
   343                           
   344                           ;LDR_son.c: 59: ADC_Deger();
   345  05E6  120A  118A  2492  120A  118A  	fcall	_ADC_Deger
   346  05EB                     l908:	
   347                           ;LDR_son.c: 61: while(1){
   348                           
   349                           
   350                           ;LDR_son.c: 62: ADCON0bits.GO=1;
   351  05EB  1283               	bcf	3,5	;RP0=0, select bank0
   352  05EC  1303               	bcf	3,6	;RP1=0, select bank0
   353  05ED  151F               	bsf	31,2	;volatile
   354  05EE                     l45:	
   355                           ;LDR_son.c: 63: while (ADCON0bits.GO);
   356                           
   357  05EE  191F               	btfsc	31,2	;volatile
   358  05EF  2DEE               	goto	l45
   359                           
   360                           ;LDR_son.c: 64: adc_deger=(ADRESH<<8)+ADRESL;
   361  05F0  081E               	movf	30,w	;volatile
   362  05F1  00D2               	movwf	main@adc_deger+1
   363  05F2  1683               	bsf	3,5	;RP0=1, select bank1
   364  05F3  1303               	bcf	3,6	;RP1=0, select bank1
   365  05F4  081E               	movf	30,w	;volatile
   366  05F5  1283               	bcf	3,5	;RP0=0, select bank0
   367  05F6  1303               	bcf	3,6	;RP1=0, select bank0
   368  05F7  00D1               	movwf	main@adc_deger
   369                           
   370                           ;LDR_son.c: 66: volt_degeri=adc_deger*0.004882;
   371  05F8  30F9               	movlw	249
   372  05F9  00A0               	movwf	___ftmul@f1
   373  05FA  309F               	movlw	159
   374  05FB  00A1               	movwf	___ftmul@f1+1
   375  05FC  303B               	movlw	59
   376  05FD  00A2               	movwf	___ftmul@f1+2
   377  05FE  0852               	movf	main@adc_deger+1,w
   378  05FF  00F9               	movwf	___lwtoft@c+1
   379  0600  0851               	movf	main@adc_deger,w
   380  0601  00F8               	movwf	___lwtoft@c
   381  0602  120A  118A  24A6  120A  118A  	fcall	___lwtoft
   382  0607  0878               	movf	?___lwtoft,w
   383  0608  1283               	bcf	3,5	;RP0=0, select bank0
   384  0609  1303               	bcf	3,6	;RP1=0, select bank0
   385  060A  00A3               	movwf	___ftmul@f2
   386  060B  0879               	movf	?___lwtoft+1,w
   387  060C  00A4               	movwf	___ftmul@f2+1
   388  060D  087A               	movf	?___lwtoft+2,w
   389  060E  00A5               	movwf	___ftmul@f2+2
   390  060F  120A  118A  2729  120A  118A  	fcall	___ftmul
   391  0614  1283               	bcf	3,5	;RP0=0, select bank0
   392  0615  1303               	bcf	3,6	;RP1=0, select bank0
   393  0616  0820               	movf	?___ftmul,w
   394  0617  00CE               	movwf	main@volt_degeri
   395  0618  0821               	movf	?___ftmul+1,w
   396  0619  00CF               	movwf	main@volt_degeri+1
   397  061A  0822               	movf	?___ftmul+2,w
   398  061B  00D0               	movwf	main@volt_degeri+2
   399                           
   400                           ;LDR_son.c: 68: deger=(volt_degeri*1000/5);
   401  061C  084E               	movf	main@volt_degeri,w
   402  061D  00A3               	movwf	___ftmul@f2
   403  061E  084F               	movf	main@volt_degeri+1,w
   404  061F  00A4               	movwf	___ftmul@f2+1
   405  0620  0850               	movf	main@volt_degeri+2,w
   406  0621  00A5               	movwf	___ftmul@f2+2
   407  0622  3000               	movlw	0
   408  0623  00A0               	movwf	___ftmul@f1
   409  0624  307A               	movlw	122
   410  0625  00A1               	movwf	___ftmul@f1+1
   411  0626  3044               	movlw	68
   412  0627  00A2               	movwf	___ftmul@f1+2
   413  0628  120A  118A  2729  120A  118A  	fcall	___ftmul
   414  062D  1283               	bcf	3,5	;RP0=0, select bank0
   415  062E  1303               	bcf	3,6	;RP1=0, select bank0
   416  062F  0820               	movf	?___ftmul,w
   417  0630  00B3               	movwf	___ftdiv@f1
   418  0631  0821               	movf	?___ftmul+1,w
   419  0632  00B4               	movwf	___ftdiv@f1+1
   420  0633  0822               	movf	?___ftmul+2,w
   421  0634  00B5               	movwf	___ftdiv@f1+2
   422  0635  3000               	movlw	0
   423  0636  00B0               	movwf	___ftdiv@f2
   424  0637  30A0               	movlw	160
   425  0638  00B1               	movwf	___ftdiv@f2+1
   426  0639  3040               	movlw	64
   427  063A  00B2               	movwf	___ftdiv@f2+2
   428  063B  120A  118A  2671  120A  118A  	fcall	___ftdiv
   429  0640  1283               	bcf	3,5	;RP0=0, select bank0
   430  0641  1303               	bcf	3,6	;RP1=0, select bank0
   431  0642  0830               	movf	?___ftdiv,w
   432  0643  00C0               	movwf	___fttol@f1
   433  0644  0831               	movf	?___ftdiv+1,w
   434  0645  00C1               	movwf	___fttol@f1+1
   435  0646  0832               	movf	?___ftdiv+2,w
   436  0647  00C2               	movwf	___fttol@f1+2
   437  0648  120A  118A  253F  120A  118A  	fcall	___fttol
   438  064D  1283               	bcf	3,5	;RP0=0, select bank0
   439  064E  1303               	bcf	3,6	;RP1=0, select bank0
   440  064F  0841               	movf	?___fttol+1,w
   441  0650  00D4               	movwf	main@deger+1
   442  0651  0840               	movf	?___fttol,w
   443  0652  00D3               	movwf	main@deger
   444                           
   445                           ;LDR_son.c: 71: if(deger<80){
   446  0653  3000               	movlw	0
   447  0654  0254               	subwf	main@deger+1,w
   448  0655  3050               	movlw	80
   449  0656  1903               	skipnz
   450  0657  0253               	subwf	main@deger,w
   451  0658  1803               	skipnc
   452  0659  2E5C               	goto	l918
   453                           
   454                           ;LDR_son.c: 72: deger=0;
   455  065A  01D3               	clrf	main@deger
   456  065B  01D4               	clrf	main@deger+1
   457  065C                     l918:	
   458                           
   459                           ;LDR_son.c: 73: }
   460                           ;LDR_son.c: 74: if(deger>930){
   461  065C  3003               	movlw	3
   462  065D  0254               	subwf	main@deger+1,w
   463  065E  30A3               	movlw	163
   464  065F  1903               	skipnz
   465  0660  0253               	subwf	main@deger,w
   466  0661  1C03               	skipc
   467  0662  2E67               	goto	l922
   468                           
   469                           ;LDR_son.c: 75: deger=1000;
   470  0663  30E8               	movlw	232
   471  0664  00D3               	movwf	main@deger
   472  0665  3003               	movlw	3
   473  0666  00D4               	movwf	main@deger+1
   474  0667                     l922:	
   475                           
   476                           ;LDR_son.c: 76: }
   477                           ;LDR_son.c: 77: duty_gir(deger);
   478  0667  0854               	movf	main@deger+1,w
   479  0668  00F1               	movwf	duty_gir@deger1+1
   480  0669  0853               	movf	main@deger,w
   481  066A  00F0               	movwf	duty_gir@deger1
   482  066B  120A  118A  24BA  120A  118A  	fcall	_duty_gir
   483  0670  2DEB               	goto	l908
   484  0671                     __end_of_main:	
   485                           ;LDR_son.c: 78: }
   486                           ;LDR_son.c: 79: return;
   487                           
   488                           
   489                           	psect	text1
   490  04BA                     __ptext1:	
   491 ;; *************** function _duty_gir *****************
   492 ;; Defined at:
   493 ;;		line 18 in file "LDR_son.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;  deger1          2    0[COMMON] int 
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   507 ;;      Params:         2       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0
   509 ;;      Temps:          2       0       0       0       0
   510 ;;      Totals:         4       0       0       0       0
   511 ;;Total ram usage:        4 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           
   521                           ;psect for function _duty_gir
   522  04BA                     _duty_gir:	
   523                           
   524                           ;LDR_son.c: 19: CCP1X = deger1 & 2;
   525                           
   526                           ;incstack = 0
   527                           ; Regs used in _duty_gir: [wreg]
   528  04BA  1283               	bcf	3,5	;RP0=0, select bank0
   529  04BB  1303               	bcf	3,6	;RP1=0, select bank0
   530  04BC  1297               	bcf	23,5	;volatile
   531                           
   532                           ;LDR_son.c: 20: CCP1Y = deger1 & 1;
   533  04BD  1C70               	btfss	duty_gir@deger1,0
   534  04BE  2CC3               	goto	u620
   535  04BF  1283               	bcf	3,5	;RP0=0, select bank0
   536  04C0  1303               	bcf	3,6	;RP1=0, select bank0
   537  04C1  1617               	bsf	23,4	;volatile
   538  04C2  2CC6               	goto	l752
   539  04C3                     u620:	
   540  04C3  1283               	bcf	3,5	;RP0=0, select bank0
   541  04C4  1303               	bcf	3,6	;RP1=0, select bank0
   542  04C5  1217               	bcf	23,4	;volatile
   543  04C6                     l752:	
   544                           
   545                           ;LDR_son.c: 21: CCPR1L = deger1>>2;
   546  04C6  0871               	movf	duty_gir@deger1+1,w
   547  04C7  00F3               	movwf	??_duty_gir+1
   548  04C8  0870               	movf	duty_gir@deger1,w
   549  04C9  00F2               	movwf	??_duty_gir
   550  04CA  0D73               	rlf	??_duty_gir+1,w
   551  04CB  0CF3               	rrf	??_duty_gir+1,f
   552  04CC  0CF2               	rrf	??_duty_gir,f
   553  04CD  0D73               	rlf	??_duty_gir+1,w
   554  04CE  0CF3               	rrf	??_duty_gir+1,f
   555  04CF  0CF2               	rrf	??_duty_gir,f
   556  04D0  0872               	movf	??_duty_gir,w
   557  04D1  0095               	movwf	21	;volatile
   558  04D2  0008               	return
   559  04D3                     __end_of_duty_gir:	
   560                           
   561                           	psect	text2
   562  04A6                     __ptext2:	
   563 ;; *************** function ___lwtoft *****************
   564 ;; Defined at:
   565 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;  c               2    8[COMMON] unsigned int 
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  3    8[COMMON] float 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0, pclath, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         3       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0
   581 ;;      Temps:          1       0       0       0       0
   582 ;;      Totals:         4       0       0       0       0
   583 ;;Total ram usage:        4 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    1
   586 ;; This function calls:
   587 ;;		___ftpack
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function ___lwtoft
   595  04A6                     ___lwtoft:	
   596                           
   597                           ;incstack = 0
   598                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   599  04A6  0878               	movf	___lwtoft@c,w
   600  04A7  00F0               	movwf	___ftpack@arg
   601  04A8  0879               	movf	___lwtoft@c+1,w
   602  04A9  00F1               	movwf	___ftpack@arg+1
   603  04AA  01F2               	clrf	___ftpack@arg+2
   604  04AB  308E               	movlw	142
   605  04AC  00FB               	movwf	??___lwtoft
   606  04AD  087B               	movf	??___lwtoft,w
   607  04AE  00F3               	movwf	___ftpack@exp
   608  04AF  01F4               	clrf	___ftpack@sign
   609  04B0  120A  118A  24D3   	fcall	___ftpack
   610  04B3  0870               	movf	?___ftpack,w
   611  04B4  00F8               	movwf	?___lwtoft
   612  04B5  0871               	movf	?___ftpack+1,w
   613  04B6  00F9               	movwf	?___lwtoft+1
   614  04B7  0872               	movf	?___ftpack+2,w
   615  04B8  00FA               	movwf	?___lwtoft+2
   616  04B9  0008               	return
   617  04BA                     __end_of___lwtoft:	
   618                           
   619                           	psect	text3
   620  053F                     __ptext3:	
   621 ;; *************** function ___fttol *****************
   622 ;; Defined at:
   623 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  f1              3   32[BANK0 ] float 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  lval            4   41[BANK0 ] unsigned long 
   628 ;;  exp1            1   45[BANK0 ] unsigned char 
   629 ;;  sign1           1   40[BANK0 ] unsigned char 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  4   32[BANK0 ] long 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   639 ;;      Params:         0       4       0       0       0
   640 ;;      Locals:         0       6       0       0       0
   641 ;;      Temps:          0       4       0       0       0
   642 ;;      Totals:         0      14       0       0       0
   643 ;;Total ram usage:       14 bytes
   644 ;; Hardware stack levels used:    1
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function ___fttol
   654  053F                     ___fttol:	
   655                           
   656                           ;incstack = 0
   657                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   658  053F  1283               	bcf	3,5	;RP0=0, select bank0
   659  0540  1303               	bcf	3,6	;RP1=0, select bank0
   660  0541  0840               	movf	___fttol@f1,w
   661  0542  00C4               	movwf	??___fttol
   662  0543  0841               	movf	___fttol@f1+1,w
   663  0544  00C5               	movwf	??___fttol+1
   664  0545  0842               	movf	___fttol@f1+2,w
   665  0546  00C6               	movwf	??___fttol+2
   666  0547  1003               	clrc
   667  0548  0D45               	rlf	??___fttol+1,w
   668  0549  0D46               	rlf	??___fttol+2,w
   669  054A  00C7               	movwf	??___fttol+3
   670  054B  0847               	movf	??___fttol+3,w
   671  054C  00CD               	movwf	___fttol@exp1
   672  054D  084D               	movf	___fttol@exp1,w
   673  054E  1D03               	btfss	3,2
   674  054F  2D59               	goto	l856
   675  0550  3000               	movlw	0
   676  0551  00C3               	movwf	?___fttol+3
   677  0552  3000               	movlw	0
   678  0553  00C2               	movwf	?___fttol+2
   679  0554  3000               	movlw	0
   680  0555  00C1               	movwf	?___fttol+1
   681  0556  3000               	movlw	0
   682  0557  00C0               	movwf	?___fttol
   683  0558  0008               	return
   684  0559                     l856:	
   685  0559  0840               	movf	___fttol@f1,w
   686  055A  00C4               	movwf	??___fttol
   687  055B  0841               	movf	___fttol@f1+1,w
   688  055C  00C5               	movwf	??___fttol+1
   689  055D  0842               	movf	___fttol@f1+2,w
   690  055E  00C6               	movwf	??___fttol+2
   691  055F  3017               	movlw	23
   692  0560                     u875:	
   693  0560  1003               	clrc
   694  0561  0CC6               	rrf	??___fttol+2,f
   695  0562  0CC5               	rrf	??___fttol+1,f
   696  0563  0CC4               	rrf	??___fttol,f
   697  0564  3EFF               	addlw	-1
   698  0565  1D03               	skipz
   699  0566  2D60               	goto	u875
   700  0567  0844               	movf	??___fttol,w
   701  0568  00C7               	movwf	??___fttol+3
   702  0569  0847               	movf	??___fttol+3,w
   703  056A  00C8               	movwf	___fttol@sign1
   704  056B  17C1               	bsf	___fttol@f1+1,7
   705  056C  30FF               	movlw	255
   706  056D  05C0               	andwf	___fttol@f1,f
   707  056E  30FF               	movlw	255
   708  056F  05C1               	andwf	___fttol@f1+1,f
   709  0570  3000               	movlw	0
   710  0571  05C2               	andwf	___fttol@f1+2,f
   711  0572  0840               	movf	___fttol@f1,w
   712  0573  00C9               	movwf	___fttol@lval
   713  0574  0841               	movf	___fttol@f1+1,w
   714  0575  00CA               	movwf	___fttol@lval+1
   715  0576  0842               	movf	___fttol@f1+2,w
   716  0577  00CB               	movwf	___fttol@lval+2
   717  0578  01CC               	clrf	___fttol@lval+3
   718  0579  308E               	movlw	142
   719  057A  02CD               	subwf	___fttol@exp1,f
   720  057B  1FCD               	btfss	___fttol@exp1,7
   721  057C  2D9B               	goto	l876
   722  057D  084D               	movf	___fttol@exp1,w
   723  057E  3A80               	xorlw	128
   724  057F  3E8F               	addlw	143
   725  0580  1803               	skipnc
   726  0581  2D8B               	goto	l874
   727  0582  3000               	movlw	0
   728  0583  00C3               	movwf	?___fttol+3
   729  0584  3000               	movlw	0
   730  0585  00C2               	movwf	?___fttol+2
   731  0586  3000               	movlw	0
   732  0587  00C1               	movwf	?___fttol+1
   733  0588  3000               	movlw	0
   734  0589  00C0               	movwf	?___fttol
   735  058A  0008               	return
   736  058B                     l874:	
   737  058B  3001               	movlw	1
   738  058C                     u905:	
   739  058C  1003               	clrc
   740  058D  0CCC               	rrf	___fttol@lval+3,f
   741  058E  0CCB               	rrf	___fttol@lval+2,f
   742  058F  0CCA               	rrf	___fttol@lval+1,f
   743  0590  0CC9               	rrf	___fttol@lval,f
   744  0591  3EFF               	addlw	-1
   745  0592  1D03               	skipz
   746  0593  2D8C               	goto	u905
   747  0594  3001               	movlw	1
   748  0595  00C4               	movwf	??___fttol
   749  0596  0844               	movf	??___fttol,w
   750  0597  07CD               	addwf	___fttol@exp1,f
   751  0598  1903               	btfsc	3,2
   752  0599  2DB6               	goto	l884
   753  059A  2D8B               	goto	l874
   754  059B                     l876:	
   755  059B  3018               	movlw	24
   756  059C  024D               	subwf	___fttol@exp1,w
   757  059D  1C03               	skipc
   758  059E  2DB3               	goto	l388
   759  059F  3000               	movlw	0
   760  05A0  00C3               	movwf	?___fttol+3
   761  05A1  3000               	movlw	0
   762  05A2  00C2               	movwf	?___fttol+2
   763  05A3  3000               	movlw	0
   764  05A4  00C1               	movwf	?___fttol+1
   765  05A5  3000               	movlw	0
   766  05A6  00C0               	movwf	?___fttol
   767  05A7  0008               	return
   768  05A8                     l882:	
   769  05A8  3001               	movlw	1
   770  05A9  00C4               	movwf	??___fttol
   771  05AA                     u935:	
   772  05AA  1003               	clrc
   773  05AB  0DC9               	rlf	___fttol@lval,f
   774  05AC  0DCA               	rlf	___fttol@lval+1,f
   775  05AD  0DCB               	rlf	___fttol@lval+2,f
   776  05AE  0DCC               	rlf	___fttol@lval+3,f
   777  05AF  0BC4               	decfsz	??___fttol,f
   778  05B0  2DAA               	goto	u935
   779  05B1  3001               	movlw	1
   780  05B2  02CD               	subwf	___fttol@exp1,f
   781  05B3                     l388:	
   782  05B3  084D               	movf	___fttol@exp1,w
   783  05B4  1D03               	btfss	3,2
   784  05B5  2DA8               	goto	l882
   785  05B6                     l884:	
   786  05B6  0848               	movf	___fttol@sign1,w
   787  05B7  1903               	btfsc	3,2
   788  05B8  2DC4               	goto	l888
   789  05B9  09C9               	comf	___fttol@lval,f
   790  05BA  09CA               	comf	___fttol@lval+1,f
   791  05BB  09CB               	comf	___fttol@lval+2,f
   792  05BC  09CC               	comf	___fttol@lval+3,f
   793  05BD  0AC9               	incf	___fttol@lval,f
   794  05BE  1903               	skipnz
   795  05BF  0ACA               	incf	___fttol@lval+1,f
   796  05C0  1903               	skipnz
   797  05C1  0ACB               	incf	___fttol@lval+2,f
   798  05C2  1903               	skipnz
   799  05C3  0ACC               	incf	___fttol@lval+3,f
   800  05C4                     l888:	
   801  05C4  084C               	movf	___fttol@lval+3,w
   802  05C5  00C3               	movwf	?___fttol+3
   803  05C6  084B               	movf	___fttol@lval+2,w
   804  05C7  00C2               	movwf	?___fttol+2
   805  05C8  084A               	movf	___fttol@lval+1,w
   806  05C9  00C1               	movwf	?___fttol+1
   807  05CA  0849               	movf	___fttol@lval,w
   808  05CB  00C0               	movwf	?___fttol
   809  05CC  0008               	return
   810  05CD                     __end_of___fttol:	
   811                           
   812                           	psect	text4
   813  0729                     __ptext4:	
   814 ;; *************** function ___ftmul *****************
   815 ;; Defined at:
   816 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  f1              3    0[BANK0 ] float 
   819 ;;  f2              3    3[BANK0 ] float 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
   822 ;;  sign            1   15[BANK0 ] unsigned char 
   823 ;;  cntr            1   14[BANK0 ] unsigned char 
   824 ;;  exp             1   10[BANK0 ] unsigned char 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  3    0[BANK0 ] float 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0, pclath, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         0       6       0       0       0
   835 ;;      Locals:         0       6       0       0       0
   836 ;;      Temps:          0       4       0       0       0
   837 ;;      Totals:         0      16       0       0       0
   838 ;;Total ram usage:       16 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; Hardware stack levels required when called:    1
   841 ;; This function calls:
   842 ;;		___ftpack
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function ___ftmul
   850  0729                     ___ftmul:	
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
   854  0729  1283               	bcf	3,5	;RP0=0, select bank0
   855  072A  1303               	bcf	3,6	;RP1=0, select bank0
   856  072B  0820               	movf	___ftmul@f1,w
   857  072C  00A6               	movwf	??___ftmul
   858  072D  0821               	movf	___ftmul@f1+1,w
   859  072E  00A7               	movwf	??___ftmul+1
   860  072F  0822               	movf	___ftmul@f1+2,w
   861  0730  00A8               	movwf	??___ftmul+2
   862  0731  1003               	clrc
   863  0732  0D27               	rlf	??___ftmul+1,w
   864  0733  0D28               	rlf	??___ftmul+2,w
   865  0734  00A9               	movwf	??___ftmul+3
   866  0735  0829               	movf	??___ftmul+3,w
   867  0736  00AA               	movwf	___ftmul@exp
   868  0737  082A               	movf	___ftmul@exp,w
   869  0738  1D03               	btfss	3,2
   870  0739  2F41               	goto	l806
   871  073A  3000               	movlw	0
   872  073B  00A0               	movwf	?___ftmul
   873  073C  3000               	movlw	0
   874  073D  00A1               	movwf	?___ftmul+1
   875  073E  3000               	movlw	0
   876  073F  00A2               	movwf	?___ftmul+2
   877  0740  0008               	return
   878  0741                     l806:	
   879  0741  0823               	movf	___ftmul@f2,w
   880  0742  00A6               	movwf	??___ftmul
   881  0743  0824               	movf	___ftmul@f2+1,w
   882  0744  00A7               	movwf	??___ftmul+1
   883  0745  0825               	movf	___ftmul@f2+2,w
   884  0746  00A8               	movwf	??___ftmul+2
   885  0747  1003               	clrc
   886  0748  0D27               	rlf	??___ftmul+1,w
   887  0749  0D28               	rlf	??___ftmul+2,w
   888  074A  00A9               	movwf	??___ftmul+3
   889  074B  0829               	movf	??___ftmul+3,w
   890  074C  00AF               	movwf	___ftmul@sign
   891  074D  082F               	movf	___ftmul@sign,w
   892  074E  1D03               	btfss	3,2
   893  074F  2F57               	goto	l812
   894  0750  3000               	movlw	0
   895  0751  00A0               	movwf	?___ftmul
   896  0752  3000               	movlw	0
   897  0753  00A1               	movwf	?___ftmul+1
   898  0754  3000               	movlw	0
   899  0755  00A2               	movwf	?___ftmul+2
   900  0756  0008               	return
   901  0757                     l812:	
   902  0757  082F               	movf	___ftmul@sign,w
   903  0758  3E7B               	addlw	123
   904  0759  00A6               	movwf	??___ftmul
   905  075A  0826               	movf	??___ftmul,w
   906  075B  07AA               	addwf	___ftmul@exp,f
   907  075C  0820               	movf	___ftmul@f1,w
   908  075D  00A6               	movwf	??___ftmul
   909  075E  0821               	movf	___ftmul@f1+1,w
   910  075F  00A7               	movwf	??___ftmul+1
   911  0760  0822               	movf	___ftmul@f1+2,w
   912  0761  00A8               	movwf	??___ftmul+2
   913  0762  3010               	movlw	16
   914  0763                     u745:	
   915  0763  1003               	clrc
   916  0764  0CA8               	rrf	??___ftmul+2,f
   917  0765  0CA7               	rrf	??___ftmul+1,f
   918  0766  0CA6               	rrf	??___ftmul,f
   919  0767  3EFF               	addlw	-1
   920  0768  1D03               	skipz
   921  0769  2F63               	goto	u745
   922  076A  0826               	movf	??___ftmul,w
   923  076B  00A9               	movwf	??___ftmul+3
   924  076C  0829               	movf	??___ftmul+3,w
   925  076D  00AF               	movwf	___ftmul@sign
   926  076E  0823               	movf	___ftmul@f2,w
   927  076F  00A6               	movwf	??___ftmul
   928  0770  0824               	movf	___ftmul@f2+1,w
   929  0771  00A7               	movwf	??___ftmul+1
   930  0772  0825               	movf	___ftmul@f2+2,w
   931  0773  00A8               	movwf	??___ftmul+2
   932  0774  3010               	movlw	16
   933  0775                     u755:	
   934  0775  1003               	clrc
   935  0776  0CA8               	rrf	??___ftmul+2,f
   936  0777  0CA7               	rrf	??___ftmul+1,f
   937  0778  0CA6               	rrf	??___ftmul,f
   938  0779  3EFF               	addlw	-1
   939  077A  1D03               	skipz
   940  077B  2F75               	goto	u755
   941  077C  0826               	movf	??___ftmul,w
   942  077D  00A9               	movwf	??___ftmul+3
   943  077E  0829               	movf	??___ftmul+3,w
   944  077F  06AF               	xorwf	___ftmul@sign,f
   945  0780  3080               	movlw	128
   946  0781  00A6               	movwf	??___ftmul
   947  0782  0826               	movf	??___ftmul,w
   948  0783  05AF               	andwf	___ftmul@sign,f
   949  0784  17A1               	bsf	___ftmul@f1+1,7
   950  0785  17A4               	bsf	___ftmul@f2+1,7
   951  0786  30FF               	movlw	255
   952  0787  05A3               	andwf	___ftmul@f2,f
   953  0788  30FF               	movlw	255
   954  0789  05A4               	andwf	___ftmul@f2+1,f
   955  078A  3000               	movlw	0
   956  078B  05A5               	andwf	___ftmul@f2+2,f
   957  078C  3000               	movlw	0
   958  078D  00AB               	movwf	___ftmul@f3_as_product
   959  078E  3000               	movlw	0
   960  078F  00AC               	movwf	___ftmul@f3_as_product+1
   961  0790  3000               	movlw	0
   962  0791  00AD               	movwf	___ftmul@f3_as_product+2
   963  0792  3007               	movlw	7
   964  0793  00A6               	movwf	??___ftmul
   965  0794  0826               	movf	??___ftmul,w
   966  0795  00AE               	movwf	___ftmul@cntr
   967  0796                     l824:	
   968  0796  1C20               	btfss	___ftmul@f1,0
   969  0797  2FA6               	goto	l828
   970  0798  0823               	movf	___ftmul@f2,w
   971  0799  07AB               	addwf	___ftmul@f3_as_product,f
   972  079A  0824               	movf	___ftmul@f2+1,w
   973  079B  1103               	clrz
   974  079C  1803               	skipnc
   975  079D  0A24               	incf	___ftmul@f2+1,w
   976  079E  1D03               	btfss	3,2
   977  079F  07AC               	addwf	___ftmul@f3_as_product+1,f
   978  07A0  0825               	movf	___ftmul@f2+2,w
   979  07A1  1103               	clrz
   980  07A2  1803               	skipnc
   981  07A3  0A25               	incf	___ftmul@f2+2,w
   982  07A4  1D03               	btfss	3,2
   983  07A5  07AD               	addwf	___ftmul@f3_as_product+2,f
   984  07A6                     l828:	
   985  07A6  3001               	movlw	1
   986  07A7                     u785:	
   987  07A7  1003               	clrc
   988  07A8  0CA2               	rrf	___ftmul@f1+2,f
   989  07A9  0CA1               	rrf	___ftmul@f1+1,f
   990  07AA  0CA0               	rrf	___ftmul@f1,f
   991  07AB  3EFF               	addlw	-1
   992  07AC  1D03               	skipz
   993  07AD  2FA7               	goto	u785
   994  07AE  3001               	movlw	1
   995  07AF                     u795:	
   996  07AF  1003               	clrc
   997  07B0  0DA3               	rlf	___ftmul@f2,f
   998  07B1  0DA4               	rlf	___ftmul@f2+1,f
   999  07B2  0DA5               	rlf	___ftmul@f2+2,f
  1000  07B3  3EFF               	addlw	-1
  1001  07B4  1D03               	skipz
  1002  07B5  2FAF               	goto	u795
  1003  07B6  3001               	movlw	1
  1004  07B7  02AE               	subwf	___ftmul@cntr,f
  1005  07B8  1D03               	btfss	3,2
  1006  07B9  2F96               	goto	l824
  1007  07BA  3009               	movlw	9
  1008  07BB  00A6               	movwf	??___ftmul
  1009  07BC  0826               	movf	??___ftmul,w
  1010  07BD  00AE               	movwf	___ftmul@cntr
  1011  07BE                     l836:	
  1012  07BE  1C20               	btfss	___ftmul@f1,0
  1013  07BF  2FCE               	goto	l840
  1014  07C0  0823               	movf	___ftmul@f2,w
  1015  07C1  07AB               	addwf	___ftmul@f3_as_product,f
  1016  07C2  0824               	movf	___ftmul@f2+1,w
  1017  07C3  1103               	clrz
  1018  07C4  1803               	skipnc
  1019  07C5  0A24               	incf	___ftmul@f2+1,w
  1020  07C6  1D03               	btfss	3,2
  1021  07C7  07AC               	addwf	___ftmul@f3_as_product+1,f
  1022  07C8  0825               	movf	___ftmul@f2+2,w
  1023  07C9  1103               	clrz
  1024  07CA  1803               	skipnc
  1025  07CB  0A25               	incf	___ftmul@f2+2,w
  1026  07CC  1D03               	btfss	3,2
  1027  07CD  07AD               	addwf	___ftmul@f3_as_product+2,f
  1028  07CE                     l840:	
  1029  07CE  3001               	movlw	1
  1030  07CF                     u835:	
  1031  07CF  1003               	clrc
  1032  07D0  0CA2               	rrf	___ftmul@f1+2,f
  1033  07D1  0CA1               	rrf	___ftmul@f1+1,f
  1034  07D2  0CA0               	rrf	___ftmul@f1,f
  1035  07D3  3EFF               	addlw	-1
  1036  07D4  1D03               	skipz
  1037  07D5  2FCF               	goto	u835
  1038  07D6  3001               	movlw	1
  1039  07D7                     u845:	
  1040  07D7  1003               	clrc
  1041  07D8  0CAD               	rrf	___ftmul@f3_as_product+2,f
  1042  07D9  0CAC               	rrf	___ftmul@f3_as_product+1,f
  1043  07DA  0CAB               	rrf	___ftmul@f3_as_product,f
  1044  07DB  3EFF               	addlw	-1
  1045  07DC  1D03               	skipz
  1046  07DD  2FD7               	goto	u845
  1047  07DE  3001               	movlw	1
  1048  07DF  02AE               	subwf	___ftmul@cntr,f
  1049  07E0  1D03               	btfss	3,2
  1050  07E1  2FBE               	goto	l836
  1051  07E2  082B               	movf	___ftmul@f3_as_product,w
  1052  07E3  00F0               	movwf	___ftpack@arg
  1053  07E4  082C               	movf	___ftmul@f3_as_product+1,w
  1054  07E5  00F1               	movwf	___ftpack@arg+1
  1055  07E6  082D               	movf	___ftmul@f3_as_product+2,w
  1056  07E7  00F2               	movwf	___ftpack@arg+2
  1057  07E8  082A               	movf	___ftmul@exp,w
  1058  07E9  00A6               	movwf	??___ftmul
  1059  07EA  0826               	movf	??___ftmul,w
  1060  07EB  00F3               	movwf	___ftpack@exp
  1061  07EC  082F               	movf	___ftmul@sign,w
  1062  07ED  00A7               	movwf	??___ftmul+1
  1063  07EE  0827               	movf	??___ftmul+1,w
  1064  07EF  00F4               	movwf	___ftpack@sign
  1065  07F0  120A  118A  24D3   	fcall	___ftpack
  1066  07F3  0870               	movf	?___ftpack,w
  1067  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  1068  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  1069  07F6  00A0               	movwf	?___ftmul
  1070  07F7  0871               	movf	?___ftpack+1,w
  1071  07F8  00A1               	movwf	?___ftmul+1
  1072  07F9  0872               	movf	?___ftpack+2,w
  1073  07FA  00A2               	movwf	?___ftmul+2
  1074  07FB  0008               	return
  1075  07FC                     __end_of___ftmul:	
  1076                           
  1077                           	psect	text5
  1078  0671                     __ptext5:	
  1079 ;; *************** function ___ftdiv *****************
  1080 ;; Defined at:
  1081 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  f2              3   16[BANK0 ] float 
  1084 ;;  f1              3   19[BANK0 ] float 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  f3              3   27[BANK0 ] float 
  1087 ;;  sign            1   31[BANK0 ] unsigned char 
  1088 ;;  exp             1   30[BANK0 ] unsigned char 
  1089 ;;  cntr            1   26[BANK0 ] unsigned char 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  3   16[BANK0 ] float 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0, pclath, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         0       6       0       0       0
  1100 ;;      Locals:         0       6       0       0       0
  1101 ;;      Temps:          0       4       0       0       0
  1102 ;;      Totals:         0      16       0       0       0
  1103 ;;Total ram usage:       16 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    1
  1106 ;; This function calls:
  1107 ;;		___ftpack
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function ___ftdiv
  1115  0671                     ___ftdiv:	
  1116                           
  1117                           ;incstack = 0
  1118                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1119  0671  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0672  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0673  0833               	movf	___ftdiv@f1,w
  1122  0674  00B6               	movwf	??___ftdiv
  1123  0675  0834               	movf	___ftdiv@f1+1,w
  1124  0676  00B7               	movwf	??___ftdiv+1
  1125  0677  0835               	movf	___ftdiv@f1+2,w
  1126  0678  00B8               	movwf	??___ftdiv+2
  1127  0679  1003               	clrc
  1128  067A  0D37               	rlf	??___ftdiv+1,w
  1129  067B  0D38               	rlf	??___ftdiv+2,w
  1130  067C  00B9               	movwf	??___ftdiv+3
  1131  067D  0839               	movf	??___ftdiv+3,w
  1132  067E  00BE               	movwf	___ftdiv@exp
  1133  067F  083E               	movf	___ftdiv@exp,w
  1134  0680  1D03               	btfss	3,2
  1135  0681  2E89               	goto	l764
  1136  0682  3000               	movlw	0
  1137  0683  00B0               	movwf	?___ftdiv
  1138  0684  3000               	movlw	0
  1139  0685  00B1               	movwf	?___ftdiv+1
  1140  0686  3000               	movlw	0
  1141  0687  00B2               	movwf	?___ftdiv+2
  1142  0688  0008               	return
  1143  0689                     l764:	
  1144  0689  0830               	movf	___ftdiv@f2,w
  1145  068A  00B6               	movwf	??___ftdiv
  1146  068B  0831               	movf	___ftdiv@f2+1,w
  1147  068C  00B7               	movwf	??___ftdiv+1
  1148  068D  0832               	movf	___ftdiv@f2+2,w
  1149  068E  00B8               	movwf	??___ftdiv+2
  1150  068F  1003               	clrc
  1151  0690  0D37               	rlf	??___ftdiv+1,w
  1152  0691  0D38               	rlf	??___ftdiv+2,w
  1153  0692  00B9               	movwf	??___ftdiv+3
  1154  0693  0839               	movf	??___ftdiv+3,w
  1155  0694  00BF               	movwf	___ftdiv@sign
  1156  0695  083F               	movf	___ftdiv@sign,w
  1157  0696  1D03               	btfss	3,2
  1158  0697  2E9F               	goto	l770
  1159  0698  3000               	movlw	0
  1160  0699  00B0               	movwf	?___ftdiv
  1161  069A  3000               	movlw	0
  1162  069B  00B1               	movwf	?___ftdiv+1
  1163  069C  3000               	movlw	0
  1164  069D  00B2               	movwf	?___ftdiv+2
  1165  069E  0008               	return
  1166  069F                     l770:	
  1167  069F  3000               	movlw	0
  1168  06A0  00BB               	movwf	___ftdiv@f3
  1169  06A1  3000               	movlw	0
  1170  06A2  00BC               	movwf	___ftdiv@f3+1
  1171  06A3  3000               	movlw	0
  1172  06A4  00BD               	movwf	___ftdiv@f3+2
  1173  06A5  3089               	movlw	137
  1174  06A6  073F               	addwf	___ftdiv@sign,w
  1175  06A7  00B6               	movwf	??___ftdiv
  1176  06A8  0836               	movf	??___ftdiv,w
  1177  06A9  02BE               	subwf	___ftdiv@exp,f
  1178  06AA  0833               	movf	___ftdiv@f1,w
  1179  06AB  00B6               	movwf	??___ftdiv
  1180  06AC  0834               	movf	___ftdiv@f1+1,w
  1181  06AD  00B7               	movwf	??___ftdiv+1
  1182  06AE  0835               	movf	___ftdiv@f1+2,w
  1183  06AF  00B8               	movwf	??___ftdiv+2
  1184  06B0  3010               	movlw	16
  1185  06B1                     u665:	
  1186  06B1  1003               	clrc
  1187  06B2  0CB8               	rrf	??___ftdiv+2,f
  1188  06B3  0CB7               	rrf	??___ftdiv+1,f
  1189  06B4  0CB6               	rrf	??___ftdiv,f
  1190  06B5  3EFF               	addlw	-1
  1191  06B6  1D03               	skipz
  1192  06B7  2EB1               	goto	u665
  1193  06B8  0836               	movf	??___ftdiv,w
  1194  06B9  00B9               	movwf	??___ftdiv+3
  1195  06BA  0839               	movf	??___ftdiv+3,w
  1196  06BB  00BF               	movwf	___ftdiv@sign
  1197  06BC  0830               	movf	___ftdiv@f2,w
  1198  06BD  00B6               	movwf	??___ftdiv
  1199  06BE  0831               	movf	___ftdiv@f2+1,w
  1200  06BF  00B7               	movwf	??___ftdiv+1
  1201  06C0  0832               	movf	___ftdiv@f2+2,w
  1202  06C1  00B8               	movwf	??___ftdiv+2
  1203  06C2  3010               	movlw	16
  1204  06C3                     u675:	
  1205  06C3  1003               	clrc
  1206  06C4  0CB8               	rrf	??___ftdiv+2,f
  1207  06C5  0CB7               	rrf	??___ftdiv+1,f
  1208  06C6  0CB6               	rrf	??___ftdiv,f
  1209  06C7  3EFF               	addlw	-1
  1210  06C8  1D03               	skipz
  1211  06C9  2EC3               	goto	u675
  1212  06CA  0836               	movf	??___ftdiv,w
  1213  06CB  00B9               	movwf	??___ftdiv+3
  1214  06CC  0839               	movf	??___ftdiv+3,w
  1215  06CD  06BF               	xorwf	___ftdiv@sign,f
  1216  06CE  3080               	movlw	128
  1217  06CF  00B6               	movwf	??___ftdiv
  1218  06D0  0836               	movf	??___ftdiv,w
  1219  06D1  05BF               	andwf	___ftdiv@sign,f
  1220  06D2  17B4               	bsf	___ftdiv@f1+1,7
  1221  06D3  30FF               	movlw	255
  1222  06D4  05B3               	andwf	___ftdiv@f1,f
  1223  06D5  30FF               	movlw	255
  1224  06D6  05B4               	andwf	___ftdiv@f1+1,f
  1225  06D7  3000               	movlw	0
  1226  06D8  05B5               	andwf	___ftdiv@f1+2,f
  1227  06D9  17B1               	bsf	___ftdiv@f2+1,7
  1228  06DA  30FF               	movlw	255
  1229  06DB  05B0               	andwf	___ftdiv@f2,f
  1230  06DC  30FF               	movlw	255
  1231  06DD  05B1               	andwf	___ftdiv@f2+1,f
  1232  06DE  3000               	movlw	0
  1233  06DF  05B2               	andwf	___ftdiv@f2+2,f
  1234  06E0  3018               	movlw	24
  1235  06E1  00B6               	movwf	??___ftdiv
  1236  06E2  0836               	movf	??___ftdiv,w
  1237  06E3  00BA               	movwf	___ftdiv@cntr
  1238  06E4                     l784:	
  1239  06E4  3001               	movlw	1
  1240  06E5                     u685:	
  1241  06E5  1003               	clrc
  1242  06E6  0DBB               	rlf	___ftdiv@f3,f
  1243  06E7  0DBC               	rlf	___ftdiv@f3+1,f
  1244  06E8  0DBD               	rlf	___ftdiv@f3+2,f
  1245  06E9  3EFF               	addlw	-1
  1246  06EA  1D03               	skipz
  1247  06EB  2EE5               	goto	u685
  1248  06EC  0832               	movf	___ftdiv@f2+2,w
  1249  06ED  0235               	subwf	___ftdiv@f1+2,w
  1250  06EE  1D03               	skipz
  1251  06EF  2EF6               	goto	u695
  1252  06F0  0831               	movf	___ftdiv@f2+1,w
  1253  06F1  0234               	subwf	___ftdiv@f1+1,w
  1254  06F2  1D03               	skipz
  1255  06F3  2EF6               	goto	u695
  1256  06F4  0830               	movf	___ftdiv@f2,w
  1257  06F5  0233               	subwf	___ftdiv@f1,w
  1258  06F6                     u695:	
  1259  06F6  1C03               	skipc
  1260  06F7  2F03               	goto	l792
  1261  06F8  0830               	movf	___ftdiv@f2,w
  1262  06F9  02B3               	subwf	___ftdiv@f1,f
  1263  06FA  0831               	movf	___ftdiv@f2+1,w
  1264  06FB  1C03               	skipc
  1265  06FC  0F31               	incfsz	___ftdiv@f2+1,w
  1266  06FD  02B4               	subwf	___ftdiv@f1+1,f
  1267  06FE  0832               	movf	___ftdiv@f2+2,w
  1268  06FF  1C03               	skipc
  1269  0700  0A32               	incf	___ftdiv@f2+2,w
  1270  0701  02B5               	subwf	___ftdiv@f1+2,f
  1271  0702  143B               	bsf	___ftdiv@f3,0
  1272  0703                     l792:	
  1273  0703  3001               	movlw	1
  1274  0704                     u705:	
  1275  0704  1003               	clrc
  1276  0705  0DB3               	rlf	___ftdiv@f1,f
  1277  0706  0DB4               	rlf	___ftdiv@f1+1,f
  1278  0707  0DB5               	rlf	___ftdiv@f1+2,f
  1279  0708  3EFF               	addlw	-1
  1280  0709  1D03               	skipz
  1281  070A  2F04               	goto	u705
  1282  070B  3001               	movlw	1
  1283  070C  02BA               	subwf	___ftdiv@cntr,f
  1284  070D  1D03               	btfss	3,2
  1285  070E  2EE4               	goto	l784
  1286  070F  083B               	movf	___ftdiv@f3,w
  1287  0710  00F0               	movwf	___ftpack@arg
  1288  0711  083C               	movf	___ftdiv@f3+1,w
  1289  0712  00F1               	movwf	___ftpack@arg+1
  1290  0713  083D               	movf	___ftdiv@f3+2,w
  1291  0714  00F2               	movwf	___ftpack@arg+2
  1292  0715  083E               	movf	___ftdiv@exp,w
  1293  0716  00B6               	movwf	??___ftdiv
  1294  0717  0836               	movf	??___ftdiv,w
  1295  0718  00F3               	movwf	___ftpack@exp
  1296  0719  083F               	movf	___ftdiv@sign,w
  1297  071A  00B7               	movwf	??___ftdiv+1
  1298  071B  0837               	movf	??___ftdiv+1,w
  1299  071C  00F4               	movwf	___ftpack@sign
  1300  071D  120A  118A  24D3   	fcall	___ftpack
  1301  0720  0870               	movf	?___ftpack,w
  1302  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0723  00B0               	movwf	?___ftdiv
  1305  0724  0871               	movf	?___ftpack+1,w
  1306  0725  00B1               	movwf	?___ftdiv+1
  1307  0726  0872               	movf	?___ftpack+2,w
  1308  0727  00B2               	movwf	?___ftdiv+2
  1309  0728  0008               	return
  1310  0729                     __end_of___ftdiv:	
  1311                           
  1312                           	psect	text6
  1313  04D3                     __ptext6:	
  1314 ;; *************** function ___ftpack *****************
  1315 ;; Defined at:
  1316 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  arg             3    0[COMMON] unsigned um
  1319 ;;  exp             1    3[COMMON] unsigned char 
  1320 ;;  sign            1    4[COMMON] unsigned char 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  3    0[COMMON] float 
  1325 ;; Registers used:
  1326 ;;		wreg, status,2, status,0
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1332 ;;      Params:         5       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0
  1334 ;;      Temps:          3       0       0       0       0
  1335 ;;      Totals:         8       0       0       0       0
  1336 ;;Total ram usage:        8 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		___ftdiv
  1342 ;;		___ftmul
  1343 ;;		___lwtoft
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           
  1348                           ;psect for function ___ftpack
  1349  04D3                     ___ftpack:	
  1350                           
  1351                           ;incstack = 0
  1352                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1353  04D3  0873               	movf	___ftpack@exp,w
  1354  04D4  1903               	btfsc	3,2
  1355  04D5  2CDB               	goto	l722
  1356  04D6  0872               	movf	___ftpack@arg+2,w
  1357  04D7  0471               	iorwf	___ftpack@arg+1,w
  1358  04D8  0470               	iorwf	___ftpack@arg,w
  1359  04D9  1D03               	skipz
  1360  04DA  2CEE               	goto	l728
  1361  04DB                     l722:	
  1362  04DB  3000               	movlw	0
  1363  04DC  00F0               	movwf	?___ftpack
  1364  04DD  3000               	movlw	0
  1365  04DE  00F1               	movwf	?___ftpack+1
  1366  04DF  3000               	movlw	0
  1367  04E0  00F2               	movwf	?___ftpack+2
  1368  04E1  0008               	return
  1369  04E2                     l726:	
  1370  04E2  3001               	movlw	1
  1371  04E3  00F5               	movwf	??___ftpack
  1372  04E4  0875               	movf	??___ftpack,w
  1373  04E5  07F3               	addwf	___ftpack@exp,f
  1374  04E6  3001               	movlw	1
  1375  04E7                     u525:	
  1376  04E7  1003               	clrc
  1377  04E8  0CF2               	rrf	___ftpack@arg+2,f
  1378  04E9  0CF1               	rrf	___ftpack@arg+1,f
  1379  04EA  0CF0               	rrf	___ftpack@arg,f
  1380  04EB  3EFF               	addlw	-1
  1381  04EC  1D03               	skipz
  1382  04ED  2CE7               	goto	u525
  1383  04EE                     l728:	
  1384  04EE  30FE               	movlw	254
  1385  04EF  0572               	andwf	___ftpack@arg+2,w
  1386  04F0  1903               	btfsc	3,2
  1387  04F1  2D09               	goto	l297
  1388  04F2  2CE2               	goto	l726
  1389  04F3                     l730:	
  1390  04F3  3001               	movlw	1
  1391  04F4  00F5               	movwf	??___ftpack
  1392  04F5  0875               	movf	??___ftpack,w
  1393  04F6  07F3               	addwf	___ftpack@exp,f
  1394  04F7  3001               	movlw	1
  1395  04F8  07F0               	addwf	___ftpack@arg,f
  1396  04F9  3000               	movlw	0
  1397  04FA  1803               	skipnc
  1398  04FB  3001               	movlw	1
  1399  04FC  07F1               	addwf	___ftpack@arg+1,f
  1400  04FD  3000               	movlw	0
  1401  04FE  1803               	skipnc
  1402  04FF  3001               	movlw	1
  1403  0500  07F2               	addwf	___ftpack@arg+2,f
  1404  0501  3001               	movlw	1
  1405  0502                     u545:	
  1406  0502  1003               	clrc
  1407  0503  0CF2               	rrf	___ftpack@arg+2,f
  1408  0504  0CF1               	rrf	___ftpack@arg+1,f
  1409  0505  0CF0               	rrf	___ftpack@arg,f
  1410  0506  3EFF               	addlw	-1
  1411  0507  1D03               	skipz
  1412  0508  2D02               	goto	u545
  1413  0509                     l297:	
  1414  0509  30FF               	movlw	255
  1415  050A  0572               	andwf	___ftpack@arg+2,w
  1416  050B  1903               	btfsc	3,2
  1417  050C  2D18               	goto	l738
  1418  050D  2CF3               	goto	l730
  1419  050E                     l736:	
  1420  050E  3001               	movlw	1
  1421  050F  02F3               	subwf	___ftpack@exp,f
  1422  0510  3001               	movlw	1
  1423  0511                     u565:	
  1424  0511  1003               	clrc
  1425  0512  0DF0               	rlf	___ftpack@arg,f
  1426  0513  0DF1               	rlf	___ftpack@arg+1,f
  1427  0514  0DF2               	rlf	___ftpack@arg+2,f
  1428  0515  3EFF               	addlw	-1
  1429  0516  1D03               	skipz
  1430  0517  2D11               	goto	u565
  1431  0518                     l738:	
  1432  0518  1BF1               	btfsc	___ftpack@arg+1,7
  1433  0519  2D1E               	goto	l304
  1434  051A  3002               	movlw	2
  1435  051B  0273               	subwf	___ftpack@exp,w
  1436  051C  1803               	skipnc
  1437  051D  2D0E               	goto	l736
  1438  051E                     l304:	
  1439  051E  1873               	btfsc	___ftpack@exp,0
  1440  051F  2D26               	goto	l305
  1441  0520  30FF               	movlw	255
  1442  0521  05F0               	andwf	___ftpack@arg,f
  1443  0522  307F               	movlw	127
  1444  0523  05F1               	andwf	___ftpack@arg+1,f
  1445  0524  30FF               	movlw	255
  1446  0525  05F2               	andwf	___ftpack@arg+2,f
  1447  0526                     l305:	
  1448  0526  1003               	clrc
  1449  0527  0CF3               	rrf	___ftpack@exp,f
  1450  0528  0873               	movf	___ftpack@exp,w
  1451  0529  00F5               	movwf	??___ftpack
  1452  052A  01F6               	clrf	??___ftpack+1
  1453  052B  01F7               	clrf	??___ftpack+2
  1454  052C  3010               	movlw	16
  1455  052D                     u605:	
  1456  052D  1003               	clrc
  1457  052E  0DF5               	rlf	??___ftpack,f
  1458  052F  0DF6               	rlf	??___ftpack+1,f
  1459  0530  0DF7               	rlf	??___ftpack+2,f
  1460  0531  3EFF               	addlw	-1
  1461  0532  1D03               	skipz
  1462  0533  2D2D               	goto	u605
  1463  0534  0875               	movf	??___ftpack,w
  1464  0535  04F0               	iorwf	___ftpack@arg,f
  1465  0536  0876               	movf	??___ftpack+1,w
  1466  0537  04F1               	iorwf	___ftpack@arg+1,f
  1467  0538  0877               	movf	??___ftpack+2,w
  1468  0539  04F2               	iorwf	___ftpack@arg+2,f
  1469  053A  0874               	movf	___ftpack@sign,w
  1470  053B  1903               	btfsc	3,2
  1471  053C  0008               	return
  1472  053D  17F2               	bsf	___ftpack@arg+2,7
  1473  053E  0008               	return
  1474  053F                     __end_of___ftpack:	
  1475                           
  1476                           	psect	text7
  1477  049B                     __ptext7:	
  1478 ;; *************** function _PWM1_TMR2_giris *****************
  1479 ;; Defined at:
  1480 ;;		line 24 in file "LDR_son.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  2   37[None  ] int 
  1487 ;; Registers used:
  1488 ;;		None
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1494 ;;      Params:         0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0
  1497 ;;      Totals:         0       0       0       0       0
  1498 ;;Total ram usage:        0 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _PWM1_TMR2_giris
  1509  049B                     _PWM1_TMR2_giris:	
  1510                           
  1511                           ;LDR_son.c: 26: CCP1M3 = 1;
  1512                           
  1513                           ;incstack = 0
  1514                           ; Regs used in _PWM1_TMR2_giris: []
  1515  049B  1283               	bcf	3,5	;RP0=0, select bank0
  1516  049C  1303               	bcf	3,6	;RP1=0, select bank0
  1517  049D  1597               	bsf	23,3	;volatile
  1518                           
  1519                           ;LDR_son.c: 27: CCP1M2 = 1;
  1520  049E  1517               	bsf	23,2	;volatile
  1521                           
  1522                           ;LDR_son.c: 29: T2CKPS0 = 1;
  1523  049F  1412               	bsf	18,0	;volatile
  1524                           
  1525                           ;LDR_son.c: 30: T2CKPS1 = 0;
  1526  04A0  1092               	bcf	18,1	;volatile
  1527                           
  1528                           ;LDR_son.c: 32: TMR2ON = 1;
  1529  04A1  1512               	bsf	18,2	;volatile
  1530                           
  1531                           ;LDR_son.c: 33: TRISC2 = 0;
  1532  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  1533  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  1534  04A4  1107               	bcf	7,2	;volatile
  1535  04A5  0008               	return
  1536  04A6                     __end_of_PWM1_TMR2_giris:	
  1537                           
  1538                           	psect	text8
  1539  0492                     __ptext8:	
  1540 ;; *************** function _ADC_Deger *****************
  1541 ;; Defined at:
  1542 ;;		line 36 in file "LDR_son.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556 ;;      Params:         0       0       0       0       0
  1557 ;;      Locals:         0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0
  1559 ;;      Totals:         0       0       0       0       0
  1560 ;;Total ram usage:        0 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           
  1570                           ;psect for function _ADC_Deger
  1571  0492                     _ADC_Deger:	
  1572                           
  1573                           ;LDR_son.c: 38: ADCON1=0b11000000;
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in _ADC_Deger: [wreg]
  1577  0492  30C0               	movlw	192
  1578  0493  1683               	bsf	3,5	;RP0=1, select bank1
  1579  0494  1303               	bcf	3,6	;RP1=0, select bank1
  1580  0495  009F               	movwf	31	;volatile
  1581                           
  1582                           ;LDR_son.c: 39: ADCON0=0b00001001;
  1583  0496  3009               	movlw	9
  1584  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0499  009F               	movwf	31	;volatile
  1587  049A  0008               	return
  1588  049B                     __end_of_ADC_Deger:	
  1589  007E                     btemp	set	126	;btemp
  1590  007E                     wtemp	set	126
  1591  007E                     wtemp0	set	126
  1592  0080                     wtemp1	set	128
  1593  0082                     wtemp2	set	130
  1594  0084                     wtemp3	set	132
  1595  0086                     wtemp4	set	134
  1596  0088                     wtemp5	set	136
  1597  007F                     wtemp6	set	127
  1598  007E                     ttemp	set	126
  1599  007E                     ttemp0	set	126
  1600  0081                     ttemp1	set	129
  1601  0084                     ttemp2	set	132
  1602  0087                     ttemp3	set	135
  1603  007F                     ttemp4	set	127
  1604  007E                     ltemp	set	126
  1605  007E                     ltemp0	set	126
  1606  0082                     ltemp1	set	130
  1607  0086                     ltemp2	set	134
  1608  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     53      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwtoft
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    6574
                                             46 BANK0      7     7      0
                          _ADC_Deger
                    _PWM1_TMR2_giris
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _duty_gir
 ---------------------------------------------------------------------------------
 (1) _duty_gir                                             4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1743
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                             32 BANK0     14    10      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2206
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2054
                                             16 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _PWM1_TMR2_giris                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Deger                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Deger
   _PWM1_TMR2_giris
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   ___lwtoft
     ___ftpack
   _duty_gir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     35      35       5       66.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Jan 03 17:15:31 2017

      __size_of_ADC_Deger 0009               __CFG_CP$OFF 0000          ?_PWM1_TMR2_giris 0070  
                      l45 05EE                       l304 051E                       l305 0526  
                     l297 0509                       l730 04F3                       l722 04DB  
                     l812 0757                       l388 05B3                       l726 04E2  
                     l806 0741                       l736 050E                       l728 04EE  
                     l840 07CE                       l824 0796                       l752 04C6  
                     l738 0518                       l770 069F                       l922 0667  
                     l764 0689                       l836 07BE                       l828 07A6  
                     l908 05EB                       l918 065C                       l792 0703  
                     l784 06E4                       l856 0559                       l882 05A8  
                     l874 058B                       l884 05B6                       l876 059B  
                     l888 05C4                       _PR2 0092              __CFG_CPD$OFF 0000  
                     u620 04C3                       u605 052D                       u525 04E7  
                     u545 0502                       u705 0704                       u565 0511  
                     u665 06B1                       u745 0763                       u905 058C  
                     u675 06C3                       u835 07CF                       u755 0775  
                     u685 06E5                       u845 07D7                       u695 06F6  
                     u935 05AA                       u785 07A7                       u795 07AF  
                     u875 0560              __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000  
            ___ftdiv@cntr 003A              ___ftdiv@sign 003F              __CFG_WRT$OFF 0000  
                    _main 05CD              ___ftpack@arg 0070              ___ftpack@exp 0073  
                    btemp 007E                      ltemp 007E                      start 0000  
                    ttemp 007E                      wtemp 007E              ___ftmul@cntr 002E  
            ___ftmul@sign 002F              ___fttol@exp1 004D              ___fttol@lval 0049  
                   ?_main 0070                     _CCP1X 00BD                     _CCP1Y 00BC  
           __CFG_WDTE$OFF 0000           __end_of___ftdiv 0729           __end_of___ftmul 07FC  
         __end_of___fttol 05CD                     _TRISA 0085             ___ftpack@sign 0074  
       __end_of_ADC_Deger 049B            __CFG_BOREN$OFF 0000                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
           main@adc_deger 0051                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 07FC  
            __end_of_main 0671                    ??_main 007C             ___fttol@sign1 0048  
                  _ADCON0 001F                    _ADCON1 009F                    _CCP1M2 00BA  
                  _CCP1M3 00BB                    _ADRESH 001E                    _ADRESL 009E  
                  _CCPR1L 0015          __end_of___ftpack 053F          __end_of___lwtoft 04BA  
                  _TMR2ON 0092                    _TRISC2 043A            __CFG_PWRTE$OFF 0000  
               ??___ftdiv 0036                 ??___ftmul 0026                 ??___fttol 0044  
        __end_of_duty_gir 04D3            duty_gir@deger1 0070     ___ftmul@f3_as_product 002B  
 __end_of__initialization 07FC                ___ftdiv@f1 0033                ___ftdiv@f2 0030  
              ___ftdiv@f3 003B                ___ftmul@f1 0020                ___ftmul@f2 0023  
              ___fttol@f1 0040            __pcstackCOMMON 0070                ___lwtoft@c 0078  
              __pmaintext 05CD                 ?___ftpack 0070                   _T2CKPS0 0090  
                 _T2CKPS1 0091                 ?___lwtoft 0078  __size_of_PWM1_TMR2_giris 000B  
               _ADC_Deger 0492                 ?_duty_gir 0070                   ___ftdiv 0671  
                 ___ftmul 0729                   ___fttol 053F                ??___ftpack 0075  
                 __ptext1 04BA                   __ptext2 04A6                   __ptext3 053F  
                 __ptext4 0729                   __ptext5 0671                   __ptext6 04D3  
                 __ptext7 049B                   __ptext8 0492                ??___lwtoft 007B  
    end_of_initialization 07FC                ?_ADC_Deger 0070                ??_duty_gir 0072  
       ??_PWM1_TMR2_giris 0070               ___ftdiv@exp 003E               ___ftmul@exp 002A  
     start_initialization 07FC               ??_ADC_Deger 0070         __size_of___ftpack 006C  
               ___latbits 0002         __size_of___lwtoft 0014             __pcstackBANK0 0020  
       __size_of_duty_gir 0019                  ?___ftdiv 0030                  ?___ftmul 0020  
                ?___fttol 0040                _ADCON0bits 001F           _PWM1_TMR2_giris 049B  
               main@deger 0053          __size_of___ftdiv 00B8          __size_of___ftmul 00D3  
        __size_of___fttol 008E                  ___ftpack 04D3                  ___lwtoft 04A6  
           __size_of_main 00A4                  _duty_gir 04BA   __end_of_PWM1_TMR2_giris 04A6  
         main@volt_degeri 004E  
